import{_ as s,c as i,o as a,a4 as e}from"./chunks/framework.CcTJ2c69.js";const E=JSON.parse('{"title":"OG 이미지 생성","description":"","frontmatter":{"tags":["vercel","edge","edge function usecases","요약","번역"]},"headers":[],"relativePath":"log/short/og-image-generation.md","filePath":"log/short/og-image-generation.md","lastUpdated":1671365980000}'),n={name:"log/short/og-image-generation.md"},t=e(`<h1 id="og-이미지-생성" tabindex="-1">OG 이미지 생성 <a class="header-anchor" href="#og-이미지-생성" aria-label="Permalink to &quot;OG 이미지 생성&quot;">​</a></h1><blockquote><p>원문: <a href="https://vercel.com/docs/concepts/functions/edge-functions/og-image-generation" target="_blank" rel="noreferrer">https://vercel.com/docs/concepts/functions/edge-functions/og-image-generation</a></p></blockquote><blockquote><p>Open Graph Protocol을 통한 소셜 미디어 이미지 생성 최적화</p></blockquote><p>동적 <a href="https://ogp.me/" target="_blank" rel="noreferrer">Open Graph</a> 이미지 생성을 지원하기 위해, Vercel의 <code>@vercel/og</code> 라이브러리를 사용할 수 있습니다. <a href="https://vercel.com/docs/concepts/functions/edge-functions" target="_blank" rel="noreferrer">Vercel 엣지 함수</a>를 사용해 소셜 미디어 카드 이미지를 생성합니다.</p><h2 id="혜택" tabindex="-1">혜택 <a class="header-anchor" href="#혜택" aria-label="Permalink to &quot;혜택&quot;">​</a></h2><ul><li>성능: 적은 양의 코드로 이미지를 만들어낼 수 있고, Edge Function은 거의 즉각적으로 실행됩니다. 따라서 이미지가 빠르게 생성되고, <a href="https://en.rakko.tools/tools/9/" target="_blank" rel="noreferrer">Open Graph Debugger</a> 과 같은 도구도 이용할 수 있습니다.</li><li>사용 용이성: html, css를 이용해 이미지를 생성할 수 있고 마크업으로부터 동적으로 이미지를 생성합니다.</li><li>비용 효율성: <code>@vercel/og</code> 는 엣지에서 자동적으로 알맞은 헤더를 추가해서 생성된 이미지를 캐싱할 수 있게합니다. 이는 재생성이나 비용을 절감하는데 도움을 줍니다.</li></ul><h2 id="지원되는-기능" tabindex="-1">지원되는 기능 <a class="header-anchor" href="#지원되는-기능" aria-label="Permalink to &quot;지원되는 기능&quot;">​</a></h2><ul><li>flexbox, absolute position 등을 포함한 기본적인 css 레이아웃을 지원합니다.</li><li>커스텀폰트, 텍스트 줄바꿈(text wrapping), 중앙 정렬, 중첩 이미지를 지원합니다.</li><li>구글 폰트로부터 폰트 서브셋을 다운받을 수 있습니다.</li><li>Vercel에 배포된 어떤 프레임워크나 애플리케이션과도 호환됩니다.</li></ul><h2 id="사용방법" tabindex="-1">사용방법 <a class="header-anchor" href="#사용방법" aria-label="Permalink to &quot;사용방법&quot;">​</a></h2><h3 id="요구-사항" tabindex="-1">요구 사항 <a class="header-anchor" href="#요구-사항" aria-label="Permalink to &quot;요구 사항&quot;">​</a></h3><ul><li>Node.js 16버전 이상이나 그 이상 버전이 필요합니다.</li><li><code>@vercel/og</code>를 설치합니다.</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @vercel/og</span></span></code></pre></div><ul><li>Next.js를 사용하려면 Next.js v12.2.3이나 그 이상 버전이 필요합니다.</li><li>이미지를 생성하기 위해 프런트엔드에서 요청하는 API endpoint를 만듭니다. 이미지를 생성하는 HTML 코드가 <code>ImageResponse</code> 함수의 파라미터 중 하나로 포함돼있으므로, 이런 종류의 구문을 처리하도록 설계된 <code>.jsx</code>나 <code>.tsx</code> 파일을 사용하는 것이 좋습니다.</li><li>기본 Node.js 런타임이 지원되지 않으므로 <a href="https://vercel.com/docs/concepts/functions/edge-functions/edge-functions-api" target="_blank" rel="noreferrer">Edge Runtime</a> 을 사용하기 위해서 <code>runtime: edge</code> 플래그를 활성화합니다.</li></ul><h3 id="시작하기" tabindex="-1">시작하기 <a class="header-anchor" href="#시작하기" aria-label="Permalink to &quot;시작하기&quot;">​</a></h3><p>Next.js를 이용해 정적인 텍스트로부터 이미지를 만드는 예제부터 시작해보세요. 아래 명령을 통해 새 앱을 준비합니다.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create-next-app@latest</span></span></code></pre></div><p><code>/pages/api</code> 에 <code>og.tsx</code> 파일을 추가해 API 엔드포인트를 추가합니다.</p><p>그리고 아래 코드를 붙여넣으세요.</p><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { ImageResponse } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@vercel/og&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> config</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  runtime: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;edge&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ImageResponse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        style</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          fontSize: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">128</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          background: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;white&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          width: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;100%&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          height: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;100%&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          display: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;flex&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          textAlign: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;center&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          alignItems: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;center&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          justifyContent: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;center&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        Hello world!</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      width: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      height: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">600</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  );</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>아래 명령어를 실행합니다.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span></code></pre></div><p><code>http://localhost:3000/api/og</code> 에 접속합니다. 아래 이미지를 보게될 것입니다.</p><p><img src="https://vercel.com/_next/image?url=%2Fstatic%2Fdocs%2Fconcepts%2Ffunctions%2Fog-image%2Fstatic-og-image.png&amp;w=3840&amp;q=75" alt=""></p><p>OG image API에 공개적으로 액세스할 수 있도록 프로젝트를 배포합니다. 예제 배포를 <a href="https://og-examples.vercel.sh/api/static" target="_blank" rel="noreferrer">https://og-examples.vercel.sh/api/static</a> 에서 찾을 수 있습니다.</p><p>그런 다음 <a href="https://ogp.me/#metadata" target="_blank" rel="noreferrer">Open Graph Protocol</a> 을 기반으로 다음과 같이 소셜 미디어 게시물에 대한 웹 컨텐츠를 만듭니다.</p><ul><li>웹 페이지 <code>&lt;head&gt;</code>내부에 <code>&lt;meta&gt;</code> 태그 만들기</li><li><code>&lt;meta&gt;</code> 태그에 <code>og:image</code> 값을 가지는 <code>property</code> 속성 추가</li><li><code>/api/og</code> 절대경로를 값으로 가지는 <code>content</code> 속성 추가</li></ul><p><a href="https://og-examples.vercel.sh/api/static" target="_blank" rel="noreferrer">https://og-examples.vercel.sh/api/static</a> 의 예제 배포에서는 아래 코드를 사용합니다.</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">head</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Hello world&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">meta</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    property</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;og:image&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://og-examples.vercel.sh/api/static&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">head</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>새 소셜 미디어 게시물을 만들때마다, API 엔드포인트를 업데이트 해야합니다. 그러나 각 게시물마다 <code>ImageResponse</code>의 변경될 부분을 식별한다면, 각 값들을 엔드포인트의 매개변수 값으로 전달해 모든 게시물에 같은 엔드포인트를 사용할 수 있습니다.</p><p>아래 예제들에서 <code>ImageResponse</code> 매개변수를 사용해 다른 컨텐츠를 포함하는 방법을 살펴봅니다.</p><h2 id="예제" tabindex="-1">예제 <a class="header-anchor" href="#예제" aria-label="Permalink to &quot;예제&quot;">​</a></h2><h4 id="이미지-생성에-사용할-컨텐츠를-url-매개변수로-전달" tabindex="-1">이미지 생성에 사용할 컨텐츠를 URL 매개변수로 전달 <a class="header-anchor" href="#이미지-생성에-사용할-컨텐츠를-url-매개변수로-전달" aria-label="Permalink to &quot;이미지 생성에 사용할 컨텐츠를 URL 매개변수로 전달&quot;">​</a></h4><ul><li><a href="https://vercel.com/docs/concepts/functions/edge-functions/og-image-examples#dynamic-text-generated-as-image" target="_blank" rel="noreferrer"><strong>동적 제목</strong> - URL 매개변수로 이미지의 제목을 전달</a></li><li><a href="https://vercel.com/docs/concepts/functions/edge-functions/og-image-examples#using-an-external-dynamic-image" target="_blank" rel="noreferrer"><strong>동적 외부 이미지</strong> - 사용자 이름을 매개변수로 전달해 이미지 생성을 위한 외부 프로필이미지를 가져옵니다</a></li></ul><h4 id="이미지-생성을-위해-텍스트나-이미지-외-다른-유형-컨텐츠를-사용" tabindex="-1">이미지 생성을 위해 텍스트나 이미지 외 다른 유형 컨텐츠를 사용 <a class="header-anchor" href="#이미지-생성을-위해-텍스트나-이미지-외-다른-유형-컨텐츠를-사용" aria-label="Permalink to &quot;이미지 생성을 위해 텍스트나 이미지 외 다른 유형 컨텐츠를 사용&quot;">​</a></h4><ul><li><a href="https://vercel.com/docs/concepts/functions/edge-functions/og-image-examples#using-emoji-in-your-image" target="_blank" rel="noreferrer"><strong>이모지</strong> 이모지를 이용해 이미지를 생성합니다</a></li><li><a href="https://vercel.com/docs/concepts/functions/edge-functions/og-image-examples#using-an-svg-image" target="_blank" rel="noreferrer"><strong>SVG</strong> SVG 포함 컨텐츠를 사용해 이미지를 생성합니다</a></li></ul><h4 id="이미지-생성을-위해-사용자-지정-css-스타일-사용" tabindex="-1">이미지 생성을 위해 사용자 지정 CSS 스타일 사용 <a class="header-anchor" href="#이미지-생성을-위해-사용자-지정-css-스타일-사용" aria-label="Permalink to &quot;이미지 생성을 위해 사용자 지정 CSS 스타일 사용&quot;">​</a></h4><ul><li><a href="https://vercel.com/docs/concepts/functions/edge-functions/og-image-examples#using-a-custom-font" target="_blank" rel="noreferrer"><strong>사용자 지정 폰트</strong> 파일 시스템에서 사용할 수 있는 사용자 지정 폰트를 이용해 이미지 제목의 스타일을 지정합니다</a></li><li><a href="https://vercel.com/docs/concepts/functions/edge-functions/og-image-examples#using-tailwind-css---experimental" target="_blank" rel="noreferrer"><strong>Tailwind CSS (실험적 기능)</strong> Tailwind CSS (실험적 기능)을 사용해 이미지 컨텐츠의 스타일을 지정합니다</a></li></ul><h4 id="국제화-및-보안" tabindex="-1">국제화 및 보안 <a class="header-anchor" href="#국제화-및-보안" aria-label="Permalink to &quot;국제화 및 보안&quot;">​</a></h4><ul><li><a href="https://vercel.com/docs/concepts/functions/edge-functions/og-image-examples#using-different-languages" target="_blank" rel="noreferrer"><strong>국제화</strong> 텍스트에 다른 언어를 사용해 이미지를 생성합니다</a></li><li><a href="https://vercel.com/docs/concepts/functions/edge-functions/og-image-examples#encrypting-parameters" target="_blank" rel="noreferrer"><strong>보안 URL</strong> 매개변수를 암호화해 특정 값만 전달될 수 있도록 합니다</a></li></ul><h2 id="기술적-세부사항" tabindex="-1">기술적 세부사항 <a class="header-anchor" href="#기술적-세부사항" aria-label="Permalink to &quot;기술적 세부사항&quot;">​</a></h2><ul><li>권장 OG 이미지 크기는 1200x630 픽셀입니다.</li><li><code>@vercel/og</code> <a href="https://github.com/vercel/satori" target="_blank" rel="noreferrer">Satori</a> 와 Resvg를 사용해 HTML 및 CSS를 PNG로 변환합니다.</li><li><code>@vercel/og</code> <a href="https://vercel.com/docs/concepts/functions/edge-functions/og-image-api" target="_blank" rel="noreferrer">API 참조</a></li></ul><h2 id="한계" tabindex="-1">한계 <a class="header-anchor" href="#한계" aria-label="Permalink to &quot;한계&quot;">​</a></h2><ul><li><a href="https://vercel.com/docs/concepts/functions/edge-functions/edge-functions-api" target="_blank" rel="noreferrer">Edge 런타임</a> 만 지원됩니다. 기본 Node.js 런타임은 작동하지 않습니다. 혹은 Node.js 외 다른 런타임을 사용하기 위해서는 <a href="https://github.com/vercel/satori" target="_blank" rel="noreferrer">Satori</a> 를 직접 사용할 수 있습니다. 그러나 <code>@vercel/og</code> 와 Edge Runtime을 같이 사용하면 더 나은 성능을 얻을 수 있습니다.</li><li><code>ttf</code>, <code>otf</code> 및 <code>woff</code> 글꼴 형식만 지원됩니다. 글꼴 파싱 속도를 최대화하려면 <code>woff</code> 대신 <code>ttf</code>나 <code>otf</code>를 사용하세요.</li><li>CSS 속성 중 flexbox(<code>display: flex</code>) 및 하위 집합만 지원됩니다. 고급 레이아웃( <code>display: grid</code>)은 작동하지 않습니다. 지원되는 CSS 속성에 대한 자세한 내용은 <a href="https://github.com/vercel/satori" target="_blank" rel="noreferrer">Satori</a>의 문서를 참조 하세요.</li><li>최대 번들 크기는 500KB입니다. 번들 크기에는 JSX, CSS, 글꼴, 이미지 및 기타 에셋이 포함됩니다. 한도를 초과하면 자산의 크기를 줄이거나 런타임에 가져오는 것을 고려하십시오.</li></ul>`,43),l=[t];function h(p,r,o,k,c,d){return a(),i("div",null,l)}const u=s(n,[["render",h]]);export{E as __pageData,u as default};
