import{_ as i,r as n,o as a,c as r,e as l,w as t,S as o,b as e,d,a as h}from"./app.0d4db754.js";const b=JSON.parse('{"title":"클린 코드","description":"","frontmatter":{},"headers":[{"level":2,"title":"4 주석","slug":"_4-주석","link":"#_4-주석","children":[{"level":3,"title":"주석은 나쁜 코드를 보완하지 못한다","slug":"주석은-나쁜-코드를-보완하지-못한다","link":"#주석은-나쁜-코드를-보완하지-못한다","children":[]},{"level":3,"title":"코드로 의도를 표현하라!","slug":"코드로-의도를-표현하라","link":"#코드로-의도를-표현하라","children":[]}]},{"level":2,"title":"5 형식 맞추기","slug":"_5-형식-맞추기","link":"#_5-형식-맞추기","children":[{"level":3,"title":"형식을 맞추는 목적","slug":"형식을-맞추는-목적","link":"#형식을-맞추는-목적","children":[]},{"level":3,"title":"적절한 행 길이를 유지하라","slug":"적절한-행-길이를-유지하라","link":"#적절한-행-길이를-유지하라","children":[]},{"level":3,"title":"가로 형식 맞추기","slug":"가로-형식-맞추기","link":"#가로-형식-맞추기","children":[]},{"level":3,"title":"팀 규칙","slug":"팀-규칙","link":"#팀-규칙","children":[]},{"level":3,"title":"밥 아저씨의 형식 규칙","slug":"밥-아저씨의-형식-규칙","link":"#밥-아저씨의-형식-규칙","children":[]}]}],"relativePath":"study/클린 코드.md","lastUpdated":1664874497000}'),c={name:"study/클린 코드.md"},p=e("h1",{id:"클린-코드",tabindex:"-1"},[d("클린 코드 "),e("a",{class:"header-anchor",href:"#클린-코드","aria-hidden":"true"},"#")],-1),u=h(`<h2 id="_4-주석" tabindex="-1">4 주석 <a class="header-anchor" href="#_4-주석" aria-hidden="true">#</a></h2><blockquote><p>나쁜 코드에 주석을 달지 마라. 새로 짜라. <br> - 브라이언 W. 커니핸, P.J. 플라우거</p></blockquote><ul><li><p>우리는 코드로 의도를 표현하지 못해, 그러니까 실패를 만회하기 위해 주석을 사용한다. ... 진심이다. 주석은 언제나 실패를 의미한다.</p></li><li><p>내가 이렇듯 주석을 무시하는 이유가 무엇이냐고? 거짓말을 하니까. 항상도 아니고 고의도 아니지만 너무 자주 거짓말을 하니까.</p></li><li><p>주석을 엄격하게 관리 ... 하지만 나라면 코드를 깔끔하게 정리하고 표현력을 강화하는 방향으로, 그래서 애초에 주석이 필요 없는 방향으로 에너지를 쏟겠다.</p></li><li><p>진실은 한곳에만 존재한다. 바로 코드다.</p></li></ul><h3 id="주석은-나쁜-코드를-보완하지-못한다" tabindex="-1">주석은 나쁜 코드를 보완하지 못한다 <a class="header-anchor" href="#주석은-나쁜-코드를-보완하지-못한다" aria-hidden="true">#</a></h3><ul><li>코드에 주석을 추가하는 일반적인 이유는 코드 품질이 나쁘기 때문이다.</li></ul><h3 id="코드로-의도를-표현하라" tabindex="-1">코드로 의도를 표현하라! <a class="header-anchor" href="#코드로-의도를-표현하라" aria-hidden="true">#</a></h3><ul><li>확실히 코드만으로 의도를 설명하기 어려운 경우가 존재한다.</li></ul><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">// 직원에게 복지 혜택을 받을 자격이 있는지 검사한다.</span></span>
<span class="line"><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">((</span><span style="color:#A6ACCD;">employee</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">flags </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;"> HOURLY_FLAG</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> employee</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">age </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">65</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><p>다음 코드는 어떤가?</p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">employee</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isEligibleForFullBenefits</span><span style="color:#89DDFF;">())</span></span>
<span class="line"></span></code></pre></div><h2 id="_5-형식-맞추기" tabindex="-1">5 형식 맞추기 <a class="header-anchor" href="#_5-형식-맞추기" aria-hidden="true">#</a></h2><ul><li>프로그래머라면 형식을 깔끔하게 맞춰 코드를 짜야 한다. 코드 형싱글 맞추기 위한 간단한 규칙을 정하고 그 규칙을 착실히 따라야 한다. 팀으로 일한다면 팀이 합의해 규칙을 정하고 모두가 그 규칙을 따라야 한다. 필요하다면 규칙을 자동으로 적용하는 도구를 활용한다.</li><li>코드 형식은 의사소통의 일환이다.</li></ul><h3 id="형식을-맞추는-목적" tabindex="-1">형식을 맞추는 목적 <a class="header-anchor" href="#형식을-맞추는-목적" aria-hidden="true">#</a></h3><ul><li>어쩌면 &#39;돌아가는 코드&#39;가 전문 개발자의 일차적인 의무라 여길지도 모르겠다. 하지만 이 책을 읽으면서 생각이 바뀌었기 바란다.</li><li>원래 코드는 사라질지라도 개발자의 스타일과 규율은 사라지지 않는다.</li></ul><h3 id="적절한-행-길이를-유지하라" tabindex="-1">적절한 행 길이를 유지하라 <a class="header-anchor" href="#적절한-행-길이를-유지하라" aria-hidden="true">#</a></h3><ul><li>JUnit, FitNesse, Time and Money는 상대적으로 파일 크기가 작다. 500줄을 넘어가는 파일이 없으며 대다수가 200줄 미만이다.</li><li>500줄을 넘지 않고 대부분 200줄 정도인 파일로도 커다란 시스템을 구축할 수 있다는 사실이다.</li></ul><h4 id="신문-기사처럼-작성하라" tabindex="-1">신문 기사처럼 작성하라 <a class="header-anchor" href="#신문-기사처럼-작성하라" aria-hidden="true">#</a></h4><ul><li>최상단에 기사를 몇 마디로 요약하는 표제가 나온다. 독자는 표제를 보고서 기사를 읽을지 말지 결정한다. 첫 문단은 전체 기사 내용을 요약한다. 쭉 읽으며 내려가면 세세한 사실이 조금씩 드러난다.</li><li>이름만 보고도 올바른 모듈을 살펴보고 있는지 아닌지를 판단할 정도로 신경 써서 짓는다. 소스 파일 첫 부분은 고차원 개념과 알고리즘을 설명한다. 아래로 내려갈수록 의도를 세세하게 묘사한다. 마지막에는 가장 저차원 함수와 세부 내역이 나온다.</li></ul><h4 id="개념은-빈-행으로-분리하라" tabindex="-1">개념은 빈 행으로 분리하라 <a class="header-anchor" href="#개념은-빈-행으로-분리하라" aria-hidden="true">#</a></h4><h4 id="세로-밀집도" tabindex="-1">세로 밀집도 <a class="header-anchor" href="#세로-밀집도" aria-hidden="true">#</a></h4><h4 id="수직-거리" tabindex="-1">수직 거리 <a class="header-anchor" href="#수직-거리" aria-hidden="true">#</a></h4><p><strong>변수 선언</strong></p><ul><li>변수는 사용하는 위치에 최대한 가까이 선언한다.</li><li>지역 변수는 각 함수 맨 처음에 선언한다.</li></ul><p><strong>인스턴스 변수</strong></p><ul><li>반면, 인스턴스 변수는 클래스 맨 처음에 선언한다.</li><li>위치는 아직도 논쟁이 분분하다.</li><li>잘 알려진 위치에 인스턴스 변수를 모은다는 사실이 중요하다.</li></ul><p><strong>종속 함수</strong></p><ul><li>한 함수가 다른 함수를 호출한다면 두 함수는 세로로 가까이 배치한다.</li></ul><p><strong>개념적 유사성</strong></p><ul><li>어떤 코드는 서로 끌어당긴다. 개념적인 친화도가 높기 때문이다. 친화도가 높을수록 코드를 가까이 배치한다.</li></ul><h4 id="세로-순서" tabindex="-1">세로 순서 <a class="header-anchor" href="#세로-순서" aria-hidden="true">#</a></h4><ul><li>일반적으로 함수 호출 종속성은 아래 방향으로 유지한다. 다시 말해, 호출되는 함수를 호출하는 함수보다 나중에 배치한다. 그러면 소스 모듈이 고차원에서 저차원으로 자연스럽게 내려간다.</li><li>신문 기사와 마찬가지로 가장 중요한 개념을 가장 먼저 표현한다.</li></ul><h3 id="가로-형식-맞추기" tabindex="-1">가로 형식 맞추기 <a class="header-anchor" href="#가로-형식-맞추기" aria-hidden="true">#</a></h3><ul><li>100자나 120자에 달해도 나쁘지 않다.</li></ul><h4 id="가로-공백과-밀집도" tabindex="-1">가로 공백과 밀집도 <a class="header-anchor" href="#가로-공백과-밀집도" aria-hidden="true">#</a></h4><ul><li>할당 연산자를 강조하려고 앞뒤에 공백을 줬다.</li><li>함수 이름과 이어지는 괄호 사이에는 공백을 넣지 않았다. 함수와 인수는 서로 밀접하기 때문이다.</li><li>연산자 우선순위를 강조하기 위해서 공백을 사용한다.</li></ul><h4 id="가로-정렬" tabindex="-1">가로 정렬 <a class="header-anchor" href="#가로-정렬" aria-hidden="true">#</a></h4><ul><li>별로 유용하지 못하다.</li><li>정렬이 필요할 정도로 목록이 길다면 문제는 목록 길이지 정렬 부족이 아니다.</li></ul><h4 id="들여쓰기" tabindex="-1">들여쓰기 <a class="header-anchor" href="#들여쓰기" aria-hidden="true">#</a></h4><ul><li>들여쓰기가 없다면 인간이 코드를 읽기란 거의 불가능하리라.</li></ul><h3 id="팀-규칙" tabindex="-1">팀 규칙 <a class="header-anchor" href="#팀-규칙" aria-hidden="true">#</a></h3><ul><li>팀은 한 가지 규칙에 합의해야 한다. 그리고 모든 팀원은 그 규칙을 따라야 한다. 그래야 소프트웨어가 일관적인 스타일을 보인다. 개개인이 따로국밥처럼 맘대로 짜대는 코드는 피해야 한다.</li></ul><h3 id="밥-아저씨의-형식-규칙" tabindex="-1">밥 아저씨의 형식 규칙 <a class="header-anchor" href="#밥-아저씨의-형식-규칙" aria-hidden="true">#</a></h3><ul><li>코드 자체가 최고의 구현 표준 문서가 되는 예다.</li></ul>`,43);function _(D,y,F,g,f,A){const s=n("BookAndProgress");return a(),r("div",null,[p,(a(),l(o,null,{default:t(()=>[(a(),l(s,{key:"클린 코드",name:"클린 코드",startedAt:new Date("2022-09-06"),progressValue:116/406*100,inProgress:!0},null,8,["startedAt"]))]),_:1})),u])}const x=i(c,[["render",_]]);export{b as __pageData,x as default};
