import{_ as h,D as p,c,I as n,w as d,a4 as l,o as k,p as r,l as v,j as a,a as i,a5 as E,a6 as o,a7 as g,a8 as y,a9 as u,aa as D,ab as m,ac as f,ad as b,ae as _,af as F,ag as A,ah as M,ai as q,aj as O,ak as C}from"./chunks/framework.rToNVa6W.js";const L=JSON.parse('{"title":"가상 DOM: 블록으로 돌아가기","description":"","frontmatter":{"feArticle":true},"headers":[],"relativePath":"log/virtual-dom-back-in-block.md","filePath":"log/virtual-dom-back-in-block.md","lastUpdated":1687787955000}'),w={name:"log/virtual-dom-back-in-block.md"},e=s=>(r("data-v-7c83aee7"),s=s(),v(),s),x=e(()=>a("h1",{id:"가상-dom-블록으로-돌아가기",tabindex:"-1"},[i("가상 DOM: 블록으로 돌아가기 "),a("a",{class:"header-anchor",href:"#가상-dom-블록으로-돌아가기","aria-label":'Permalink to "가상 DOM: 블록으로 돌아가기"'},"​")],-1)),B=e(()=>a("blockquote",null,[a("p",null,[i("원문: "),a("a",{href:"https://million.dev/blog/virtual-dom",target:"_blank",rel:"noreferrer"},"https://million.dev/blog/virtual-dom")])],-1)),j=e(()=>a("hr",null,null,-1)),P=e(()=>a("p",null,[a("strong",null,"이 글은 심층적인 분석글입니다 — 초보자를 위한 글이 아닙니다."),i(" Million.js를 배우고 싶으시다면 "),a("a",{href:"https://million.dev/docs/quickstart",target:"_blank",rel:"noreferrer"},"빠른 시작"),i("을 참조하세요.")],-1)),I=e(()=>a("p",null,"이 포스팅은 React와 Million.js 내부를 자세히 살펴보고자 하는 숙련된 프로그래머를 대상으로 합니다.",-1)),S=l("",26),T=e(()=>a("p",null,[a("strong",null,"요약: DOM이 아닌 데이터의 차이를 계산합니다.")],-1)),N=e(()=>a("p",null,"왜 그럴까요? 데이터의 크기는 일반적으로 DOM의 크기보다 훨씬 작습니다. 또한 전체 DOM 노드의 차이를 계산하는 것보다 데이터 값의 차이를 계산하는 것이 훨씬 간단할 수 있습니다.",-1)),U=l("",54);function R(s,V,J,$,H,z){const t=p("Callout");return k(),c("div",null,[x,B,j,n(t,{type:"info"},{default:d(()=>[P,I]),_:1}),S,n(t,{type:"info"},{default:d(()=>[T,N]),_:1}),U])}const W=h(w,[["render",R],["__scopeId","data-v-7c83aee7"]]);export{L as __pageData,W as default};
