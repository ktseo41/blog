import{_ as t,o as i,c as l,O as e}from"./chunks/framework.7d8c0445.js";const p=JSON.parse('{"title":"요약: 토스 | Slash 22 - 미친 생산성을 위한 React Native","description":"","frontmatter":{},"headers":[],"relativePath":"log/short/toss-slash22-react-native-for-super-high-productivity.md","filePath":"log/short/toss-slash22-react-native-for-super-high-productivity.md","lastUpdated":1671365980000}'),a={name:"log/short/toss-slash22-react-native-for-super-high-productivity.md"},s=e('<h1 id="요약-토스-slash-22-미친-생산성을-위한-react-native" tabindex="-1">요약: 토스 | Slash 22 - 미친 생산성을 위한 React Native <a class="header-anchor" href="#요약-토스-slash-22-미친-생산성을-위한-react-native" aria-label="Permalink to &quot;요약: 토스 | Slash 22 - 미친 생산성을 위한 React Native&quot;">​</a></h1><ul><li>기존 앱의 문제점 <ul><li>느린 배포 속도, 적은 개발 리소스</li><li>iOS 빌드 속도 - 하루 1/3 침대, 1/3 지하철, 1/3 빌드</li><li>배포 심사 - 느리고 불규칙적, 1일 ~ 4주</li><li>앱 업데이트 - 동남아의 느린 네트워크, 자동 업데이트를 꺼둔 유저들도 많다.</li></ul></li><li>Flutter vs React Native <table><th><td>장점</td><td>단점</td></th><tr><td>Flutter</td><td><div>훌륭한 공식 라이브러리 생태계</div><div>React Native보다 더 많이 사용됨</div></td><td>높은 학습 비용</td></tr><tr><td>React Native</td><td><div>Codepush 기능 사용 가능</div><div>채용에 용이한 풍부한 개발자 풀</div></td><td>빈약한 공식 라이브러리 생태계</td></tr></table><ul><li>+ Code Push (React Native) - 앱 내에 JavaScript 번들을 포함할 수 있고, 해당 번들을 업데이트해서 앱 업데이트 없이 최신 기능을 전달 가능</li></ul></li><li><ul><li>앱을 완전히 다시 만들기로 하고, 병렬적으로 기존앱은 부분적으로 React Native를 적용</li><li>Native API가 필요한 기존 앱 기능을 구현해보면서 테스트</li><li>비싼 그래픽 연산과 같은 높은 성능이 필요한 작업은 부분적으로 Native View를 띄워 해결</li></ul></li><li>Native 코드를 건드려야 하는 작업과 JavaScript로만 완료할 수 있는 태스크 2가지로 분류</li><li>기존 앱 사용자의 경험을 해치지 않기 위해 꼼꼼하고 많은 테스트를 수행</li><li>메인 로직이 아닌 숨어있는 로직을 코드레벨에서 발견하며 옮김. 광고 마케팅 툴, 푸시, 로그 등</li><li>3개월간 200번에 달하는 Code Push를 통한 업데이트가 가능했음</li><li>React Native 사용 후기 - iOS 개발자 <ul><li>개발 속도 - 핫 리로딩. Swift로 개발시 3달, 미숙한 TypeScript로도 2주</li><li>커리어적인 고민 - 전문성 포기하는건 아닐지? 기술은 이미 6 ~ 7년 지났고 Object C에서 Swift로 넘어갈 때 느꼈던 기분. 역량 확장이라고 생각하고 고민을 하지 않기로 결정</li></ul></li><li>React Native 사용 후기 - 프론트엔드 개발자 <ul><li>저렴한 학습 비용</li><li>역할 확장 - 앱의 모든 flow에 관여</li></ul></li><li>팀 관점에서 <ul><li>빠르게 실패, 개선 반복 가능</li><li>채용이 어려운 초기 스타트업에 유용할 것</li></ul></li></ul>',2),r=[s];function d(o,c,v,h,u,_){return i(),l("div",null,r)}const N=t(a,[["render",d]]);export{p as __pageData,N as default};
