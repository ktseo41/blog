import{_ as e,c as t,a1 as r,o}from"./chunks/framework.74NQyPOy.js";const u=JSON.parse('{"title":"Chapter 13 - 테스트 대역","description":"","frontmatter":{"outline":[2,3]},"headers":[],"relativePath":"study/google-engineer/chapter13.md","filePath":"study/google-engineer/chapter13.md","lastUpdated":1744091049000}'),n={name:"study/google-engineer/chapter13.md"};function i(h,a,l,d,s,c){return o(),t("div",null,a[0]||(a[0]=[r('<h1 id="chapter-13-테스트-대역" tabindex="-1">Chapter 13 - 테스트 대역 <a class="header-anchor" href="#chapter-13-테스트-대역" aria-label="Permalink to &quot;Chapter 13 - 테스트 대역&quot;">​</a></h1><br><div class="comment">테스트 대역이 한 챕터를 할애해야할 정도로 중요한가보다</div><h2 id="_13-1-테스트-대역이-소프트웨어-개발에-미치는-영향" tabindex="-1">13.1 테스트 대역이 소프트웨어 개발에 미치는 영향 <a class="header-anchor" href="#_13-1-테스트-대역이-소프트웨어-개발에-미치는-영향" aria-label="Permalink to &quot;13.1 테스트 대역이 소프트웨어 개발에 미치는 영향&quot;">​</a></h2><h2 id="_13-2-테스트-대역-구글" tabindex="-1">13.2 테스트 대역 @ 구글 <a class="header-anchor" href="#_13-2-테스트-대역-구글" aria-label="Permalink to &quot;13.2 테스트 대역 @ 구글&quot;">​</a></h2><h2 id="_13-3-기본-개념" tabindex="-1">13.3 기본 개념 <a class="header-anchor" href="#_13-3-기본-개념" aria-label="Permalink to &quot;13.3 기본 개념&quot;">​</a></h2><h3 id="_13-3-2-이어주기" tabindex="-1">13.3.2 이어주기 <a class="header-anchor" href="#_13-3-2-이어주기" aria-label="Permalink to &quot;13.3.2 이어주기&quot;">​</a></h3><div class="comment">의존성 주입을 하려면 실제 코드가 의존성 주입이 가능해야 하는 형태여야 한다. 즉 테스트를 위해서 리팩터링을 하거나 코드를 다시 작성해야 하는건데, 이 정도로 테스트가 중요해지는 단계정도는 되어야 테스트 더블이 적극적으료 필요한 상황이 아닐까? 예를 들어 서비스가 이미 큰 가치를 발휘하고 있어서 빠른 속도로 기능 개발이 필요하지 않고 안정성이 더 중요한 때</div>',8)]))}const m=e(n,[["render",i]]);export{u as __pageData,m as default};
